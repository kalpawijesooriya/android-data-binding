// Merge of
// https://github.com/mgouline/android-samples/blob/master/jacoco/app/build.gradle
// and https://github.com/pushtorefresh/storio/blob/master/gradle/jacoco-android.gradle

jacoco {
    // See https://github.com/jacoco/jacoco/releases
    toolVersion = '0.7.5.201505241946'
}

project.afterEvaluate {
    // Create coverage task of form 'testFlavorTypeCoverage' depending on 'testFlavorTypeUnitTest'
    task "jacocoTestReport"(type: JacocoReport, dependsOn: "testDebugUnitTest") {
        group = 'Reporting'
        description = "Generate Jacoco coverage reports for the debug build."

        classDirectories = fileTree(
                dir: "${project.buildDir}/intermediates/classes/debug",
                excludes: ['**/R.class',
                           '**/R$*.class',
                           '**/apidez/com/databinding/databinding/*',
                           '**/android/databinding/*',
                           '**/*$ViewInjector*.*',
                           '**/*$ViewBinder*.*',
                           '**/BuildConfig.*',
                           '**/*Application*.*',
                           '**/*Component*.*',
                           '**/UiUtils.*',
                           '**/*Binding*.*',
                           '**/*Retrofit*.*',
                           '**/*BR*.*',
                           '**/*Adapter*.*',
                           '**/*Fragment*.*',
                           '**/*Activity*.*',
                           '**/*Rx*.*',
                           '**/*ViewHolder*.*',
                           '**/Manifest*.*',
                           '**/*$Lambda$*.*',
                           '**/*Module.*',
                           '**/*Dagger*.*',
                           '**/*MembersInjector*.*',
                           '**/*_Provide*Factory*.*']
        )

        def coverageSourceDirs = [
                'src/main/java',
        ]
        additionalSourceDirs = files(coverageSourceDirs)
        sourceDirectories = files(coverageSourceDirs)
        executionData = files("${project.buildDir}/jacoco/testDebugUnitTest.exec")

        reports {
            xml.enabled = true
            html.enabled = true
            xml.destination = "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
            html.destination = "${buildDir}/reports/jacoco/test/html"
        }
    }

    build.dependsOn "jacocoTestReport"
}